% A new script to measure the extent of the non-linearity in the
% iso-response contour in a data driven manner
% Author - Abhishek De, 10/18
close all; clearvars;
load THETA_all.mat
load RHO_all.mat
load oog_idx_all.mat
load not_oog_idx_all.mat
load filename_l.mat
load filename_c.mat
filename = [filename_c; filename_l];
NLindex_r = [];
NLindex_p = [];
plot_counter = 1;
figure(plot_counter); 
N = numel(filename);
numsubplots = ceil(sqrt(N));
ratioeig = [];
for ii = 1:N
    ind = ii;
    THETA = THETA_all{1,ind};
    THETA = THETA * pi/180; % converting to radians
    if any(THETA>(135*pi/180))
        allthetas = linspace(-pi,pi,100);
        newtheta = linspace(-pi,pi,101);
    else
        allthetas = linspace(-pi/4,3*pi/4,100);
        newtheta = linspace(-pi/4,3*pi/4,101);
    end
    RHO = RHO_all{1,ind};
    oog_idx = oog_idx_all{1,ind};
    not_oog_idx = not_oog_idx_all{1,ind};
    newTHETA = THETA(not_oog_idx);
    newTHETA = newTHETA + pi/4; % adding an extra 45 degrees
    newRHO = RHO(not_oog_idx);
    [x,y] = pol2cart(newTHETA,newRHO);
    [~,jj] = sort(newTHETA);
    x = x(jj); y = y(jj);
    slopes = diff(y)./diff(x);
    diffTHETA = newTHETA(jj);
    diffTHETA(end) = [];
    [r,p] = corr(diffTHETA,slopes,'Type','Pearson');
    NLindex_r = [NLindex_r; r];
    NLindex_p = [NLindex_p; p];
    
    [~,eigval] = eig(cov([x y]));
    ratioeig = [ratioeig; max(diag(eigval))/sum(abs(diag(eigval)))]; % looking at the contribution of 1st eigenvalue over all the other eigenvalues
    
    figure(plot_counter),subplot(numsubplots,numsubplots,ii),plot(diffTHETA,slopes,'o','MarkerFacecolor',[1 0 0]);
    figure(plot_counter+1),subplot(numsubplots,numsubplots,ii),plot(x,y,'o','MarkerFacecolor',[0 0 1]); axis square;
end
savevariables = 1;
if savevariables == 1
    save NLindex_r NLindex_r
    save NLindex_p NLindex_p
end
plot_counter = plot_counter + 2;
%% Just doing some conrol analyses to see if this approach even works
plot_counter = 10;
theta = linspace(0,pi,21);
r = ones(size(theta));
[x,y] = pol2cart(theta,r);
slopes = diff(y)./diff(x);
[r,p] = corr(slopes',theta(1:end-1)','Type','Spearman');
figure(plot_counter); subplot(221); plot(x,y); xlabel('x'); ylabel('y');
subplot(222); plot(theta,r); xlabel('theta'); ylabel('r');
subplot(223); plot(theta(1:end-1),slopes,'o','MarkerFacecolor',[0 0 1]); ylabel('slopes');
subplot(224); plot(diff(slopes),'o','MarkerFacecolor',[0 0 1]); ylabel('change in slopes');