% A revised script for the paper figures geared towards addressing the rebuttals 
% Author - Abhishek De, 4/20
close all; clearvars;
plot_counter = 1;

%% Figure 2: Plot of cone weights of all the screened cells
% Calculating conewts of the cells of interest: SVD 
if ~exist('plot_counter')
    plot_counter = 1;
end
% load Output_ListWN.mat
load Output_ListWN2.mat
load Singleopponent.mat
crit = chi2inv(0.9999,300);
Z = cell2mat(Output_List(:,7));
Zmax = max(Z(:,2:7),[],2);
Z_cellsofinterest = Zmax>crit;
Output_List(~Z_cellsofinterest,:) = [];
NLI = cell2mat(Output_List(:,13));
simplecells = NLI<0;
Singleopponent = logical(Singleopponent);

% calculating the M matrix
conewts_svd = cell2mat(Output_List(~Singleopponent & simplecells,23)');
conewts_svd = conewts_svd./repmat(sum(abs(conewts_svd),1),[3 1]);
conewts_svd = conewts_svd .* repmat(sign(conewts_svd(2,:)),[3 1]);

thresh = 0.8;
LumIds_conewts = find(conewts_svd(1,:) + conewts_svd(2,:) >thresh & sum(sign(conewts_svd(1:2,:)),1)==2 & conewts_svd(1,:)>0.1 & conewts_svd(2,:)>0.1);
ColorOpponentIds_conewts = find(conewts_svd(2,:) - conewts_svd(1,:) >thresh & sum(sign(conewts_svd(1:2,:)),1)==0 & sqrt((conewts_svd(2,:)-0.5).^2 + (conewts_svd(1,:)+0.5).^2)<0.3);
Sconedominated_conewts = find(abs(conewts_svd(3,:))>1-thresh);
Other_conewts = 1:size(conewts_svd,2); 
Sconesensitive = conewts_svd(:,Sconedominated_conewts);
Sconedominated_conewts(sign(Sconesensitive(1,:))==1 & sign(Sconesensitive(3,:))==1) = [];
Other_conewts([LumIds_conewts ColorOpponentIds_conewts Sconedominated_conewts]) = [];

figure(plot_counter); set(gcf,'Name','Cone wts') 
subplot(211);plot(conewts_svd(1,LumIds_conewts),conewts_svd(2,LumIds_conewts),'o','MarkerSize',4,'LineWidth',0.5,'MarkerFaceColor',[0 1 0],'MarkerEdgeColor',[1 1 1]); hold on;
plot(conewts_svd(1,ColorOpponentIds_conewts),conewts_svd(2,ColorOpponentIds_conewts),'o','MarkerSize',4,'LineWidth',0.5,'MarkerFaceColor',[1 0 0],'MarkerEdgeColor',[1 1 1]); hold on;
plot(conewts_svd(1,Sconedominated_conewts),conewts_svd(2,Sconedominated_conewts),'o','MarkerSize',4,'LineWidth',0.5,'MarkerFaceColor',[0 0 1],'MarkerEdgeColor',[1 1 1]);
plot(conewts_svd(1,Other_conewts),conewts_svd(2,Other_conewts),'o','MarkerSize',3,'LineWidth',0.5,'MarkerFaceColor',[0 0 0],'MarkerEdgeColor',[1 1 1]); 
axis equal; set(gca,'Xlim',[-1 1],'Ylim',[0 1],'XTick',-1:0.5:1,'YTick',0:0.5:1,'Tickdir','out'); plot([-1 0],[0 1],'k'); plot([0 1],[1 0],'k'); plot([-1 1],[0 0],'k');  xlabel('L'), ylabel('M');
subplot(212); plot(conewts_svd(3,LumIds_conewts),conewts_svd(2,LumIds_conewts),'o','MarkerSize',4,'LineWidth',0.5,'MarkerFaceColor',[0 1 0],'MarkerEdgeColor',[1 1 1]); hold on;
plot(conewts_svd(3,ColorOpponentIds_conewts),conewts_svd(2,ColorOpponentIds_conewts),'o','MarkerSize',4,'LineWidth',0.5,'MarkerFaceColor',[1 0 0],'MarkerEdgeColor',[1 1 1]); hold on;
plot(conewts_svd(3,Sconedominated_conewts),conewts_svd(2,Sconedominated_conewts),'o','MarkerSize',4,'LineWidth',0.5,'MarkerFaceColor',[0 0 1],'MarkerEdgeColor',[1 1 1]);
plot(conewts_svd(3,Other_conewts),conewts_svd(2,Other_conewts),'o','MarkerSize',3,'LineWidth',0.5,'MarkerFaceColor',[0 0 0],'MarkerEdgeColor',[1 1 1]); 
axis equal; set(gca,'Xlim',[-1 1],'Ylim',[0 1],'XTick',-1:0.5:1,'YTick',0:0.5:1,'Tickdir','out'); plot([-1 0],[0 1],'k'); plot([0 1],[1 0],'k'); plot([-1 1],[0 0],'k');  xlabel('S'), ylabel('M');
plot_counter = plot_counter + 1;

% Further classification of S-cone sensitive cells
Sconesensitive = conewts_svd(:,Sconedominated_conewts);
SvsLM = Sconesensitive(:,sign(Sconesensitive(1,:))==1 & sign(Sconesensitive(3,:))==-1);
SMvsL = Sconesensitive(:,sign(Sconesensitive(1,:))==-1 & sign(Sconesensitive(3,:))==1);
SLvsM = Sconesensitive(:,sign(Sconesensitive(1,:))==-1 & sign(Sconesensitive(3,:))==-1);

figure(plot_counter); set(gcf,'Name','Cone wts for S cells') 
plot(SvsLM(1,:),SvsLM(2,:),'o','MarkerSize',6,'LineWidth',0.5,'MarkerFaceColor',[0.5 0.5 0.1],'MarkerEdgeColor',[1 1 1]); hold on;
plot(SMvsL(1,:),SMvsL(2,:),'o','MarkerSize',6,'LineWidth',0.5,'MarkerFaceColor',[0.7 0.3 0.1],'MarkerEdgeColor',[1 1 1]);
plot(SLvsM(1,:),SLvsM(2,:),'o','MarkerSize',6,'LineWidth',0.5,'MarkerFaceColor',[0.3 0.7 0.1],'MarkerEdgeColor',[1 1 1]); 
axis equal; set(gca,'Xlim',[-1 1],'Ylim',[0 1],'XTick',-1:0.5:1,'YTick',0:0.5:1,'Tickdir','out'); plot([-1 0],[0 1],'k'); plot([0 1],[1 0],'k'); plot([-1 1],[0 0],'k');  xlabel('L'), ylabel('M');
plot_counter = plot_counter + 1;

%% Plotting the feature vectors of simple and complex cells based on the NLI criterion
if ~exist('plot_counter')
    plot_counter = 1;
end

load Output_ListWN2.mat
load Singleopponent.mat
crit = chi2inv(0.9999,300);
Z = cell2mat(Output_List(:,7));
Zmax = max(Z(:,2:7),[],2);
Z_cellsofinterest = Zmax>crit;
Output_List(~Z_cellsofinterest,:) = [];
NLI = cell2mat(Output_List(:,13));
simplecells = NLI<0;
Singleopponent = logical(Singleopponent);
FV_simple = [];
FV_complex = [];
for ii = 1:size(Output_List,1) 
   fr = Output_List{ii,24}; 
   bins = Output_List{ii,25};
   fr = (fr-min(fr));
   fr = fr/max(abs(fr));
   
   if fr(1)>fr(end)
       fr = fliplr(fr);
   end
   
   if simplecells(ii)
       FV_simple = [FV_simple; fr'];
   else 
       FV_complex = [FV_complex; fr'];
   end
 
end
subplot(121); errorbar(mean(FV_simple,1),std(FV_simple,1)/sqrt(size(FV_simple,1)),'-ko'); axis square; xlabel('proj'); ylabel('Normalized firing rate'); 
set(gca,'Tickdir','out','Ylim',[0 1],'YTick',0:0.25:1.0); title('NLI<0'); text(3,0.75,strcat('N=',num2str(size(FV_simple,1))));
subplot(122); errorbar(mean(FV_complex,1),std(FV_complex,1)/sqrt(size(FV_complex,1)),'-ko'); axis square; xlabel('proj'); ylabel('Normalized firing rate'); 
set(gca,'Tickdir','out','Ylim',[0 1],'YTick',0:0.25:1.0); title('NLI>0'); text(3,0.75,strcat('N=',num2str(size(FV_complex,1))));
plot_counter = plot_counter + 1;

%% Identifying the distribution of simple and DO cells for each monkey

if ~exist('plot_counter')
    plot_counter = 1;
end
% load Output_ListWN.mat
load Output_ListWN2.mat
load Singleopponent.mat
crit = chi2inv(0.9999,300);
Z = cell2mat(Output_List(:,7));
Zmax = max(Z(:,2:7),[],2);
Z_cellsofinterest = Zmax>crit;
Output_List(~Z_cellsofinterest,:) = [];
NLI = cell2mat(Output_List(:,13));
simplecells = NLI<0;
Singleopponent = logical(Singleopponent);

% calculating the M matrix
conewts_svd = cell2mat(Output_List(~Singleopponent & simplecells,23)');
conewts_svd = conewts_svd./repmat(sum(abs(conewts_svd),1),[3 1]);
conewts_svd = conewts_svd .* repmat(sign(conewts_svd(2,:)),[3 1]);

thresh = 0.8;
LumIds_conewts = find(conewts_svd(1,:) + conewts_svd(2,:) >thresh & sum(sign(conewts_svd(1:2,:)),1)==2 & conewts_svd(1,:)>0.1 & conewts_svd(2,:)>0.1);
ColorOpponentIds_conewts = find(conewts_svd(2,:) - conewts_svd(1,:) >thresh & sum(sign(conewts_svd(1:2,:)),1)==0 & sqrt((conewts_svd(2,:)-0.5).^2 + (conewts_svd(1,:)+0.5).^2)<0.3);
Sconedominated_conewts = find(abs(conewts_svd(3,:))>1-thresh);
Other_conewts = 1:size(conewts_svd,2); 
Sconesensitive = conewts_svd(:,Sconedominated_conewts);
Sconedominated_conewts(sign(Sconesensitive(1,:))==1 & sign(Sconesensitive(3,:))==1) = [];
Other_conewts([LumIds_conewts ColorOpponentIds_conewts Sconedominated_conewts]) = [];

MonkeyID = [];
for ii = 1:size(Output_List,1)
    MonkeyID = [MonkeyID; Output_List{ii,1}(1)];
end

Monkey_K = [sum(ismember(LumIds_conewts,find(MonkeyID=='K'))) sum(ismember(ColorOpponentIds_conewts,find(MonkeyID=='K'))) sum(ismember(Sconedominated_conewts,find(MonkeyID=='K'))) sum(ismember(Other_conewts,find(MonkeyID=='K')))];
Monkey_S = [sum(ismember(LumIds_conewts,find(MonkeyID=='S'))) sum(ismember(ColorOpponentIds_conewts,find(MonkeyID=='S'))) sum(ismember(Sconedominated_conewts,find(MonkeyID=='S'))) sum(ismember(Other_conewts,find(MonkeyID=='S')))];
Monkey_M = [sum(ismember(LumIds_conewts,find(MonkeyID=='M'))) sum(ismember(ColorOpponentIds_conewts,find(MonkeyID=='M'))) sum(ismember(Sconedominated_conewts,find(MonkeyID=='M'))) sum(ismember(Other_conewts,find(MonkeyID=='M')))];
Monkey_P = [sum(ismember(LumIds_conewts,find(MonkeyID=='P'))) sum(ismember(ColorOpponentIds_conewts,find(MonkeyID=='P'))) sum(ismember(Sconedominated_conewts,find(MonkeyID=='P'))) sum(ismember(Other_conewts,find(MonkeyID=='P')))];
