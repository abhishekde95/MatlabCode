%DO NOT USE - DOES NOT WORK 
%My deprecatd attempt to speed up the model calculation by running
%lmtfgeneratemoduledata using parfor. Didn't work and never figured out
%why.
function [CVerrors, fvs] = parErrLoop_tmp(L, data, input_struct, NOOGidxs, n, niter)
parfor(i=1:niter, n)
    L_inner = L;
    L_inner(NOOGidxs(i)) = true;
    [output_struct, ~] = LMTF_generate_module_data(data(~L_inner,:), false, input_struct); % Here's the workhorse
    %WARNINGS{length(WARNINGS)+1} = warning;
    fvs(i,:) = [sum(output_struct.legacy.firstroundfvs),...
        sum(output_struct.legacy.mode0fvs),...
        sum(output_struct.legacy.mode1fvs),...
        sum(output_struct.legacy.mode1p1fvs),...
        sum(output_struct.legacy.mode2fvs),...
        sum(output_struct.legacy.mode3fvs),...
        sum(output_struct.legacy.mode4fvs),...
        sum(output_struct.legacy.mode5fvs)];
    LXY = all(output_struct.eccs == repmat(data(L_inner,[5 6]),size(output_struct.eccs,1),1),2);% This line has problems if there are not enough data points to fit the model at a location
    CVerrors(i,:) = [tf_fiterr2(output_struct.legacy.firstroundmodels(:,LXY),data(L_inner,:)),...
        tf_fiterr2(output_struct.legacy.mode0models(:,LXY),data(L_inner,:)),...
        tf_fiterr2(output_struct.legacy.mode1models(:,LXY),data(L_inner,:)),...
        tf_fiterr2(output_struct.legacy.mode1p1models(:,LXY),data(L_inner,:)),...
        tf_fiterr2(output_struct.legacy.mode2models(:,LXY),data(L_inner,:)),...
        tf_fiterr2(output_struct.legacy.mode3models(:,LXY),data(L_inner,:)),...
        tf_fiterr2(output_struct.legacy.mode4models(:,LXY),data(L_inner,:)),...
        tf_fiterr2(output_struct.legacy.mode5models(:,LXY),data(L_inner,:))];
end
end